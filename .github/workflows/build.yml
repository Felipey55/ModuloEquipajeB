# Workflow name
name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Set up Maven
        run: |
          wget https://apache.mirrors.hoobly.com/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz
          tar -xvf apache-maven-3.8.6-bin.tar.gz
          sudo mv apache-maven-3.8.6 /opt/maven
          sudo ln -s /opt/maven/bin/mvn /usr/bin/mvn
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests
        run: mvn -B test -X  # Agregamos el flag -X para obtener más información de depuración.
      - name: List Surefire reports
        run: ls -l target/surefire-reports/  # Para depurar informes de las pruebas.

  sonar:
    name: SonarCloud analysis
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=felipey55_ModuloEquipajeB -Dsonar.organization=felipey55 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: sonar
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: List target directory
        run: ls -l target/
      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ModuloEquipajeB-jar
          path: target/ModuloEquipajeB-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: ModuloEquipajeB-jar
          path: target
      - name: List target directory before zipping
        run: ls -l target/
      - name: Create ZIP file
        run: zip -j app.zip target/ModuloEquipajeB-0.0.1-SNAPSHOT.jar
      - name: Upload ZIP to GitHub Releases (or another service if needed)
        run: |
          curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"tag_name": "v1", "name": "Release v1", "body": "Initial release", "draft": false, "prerelease": false}' \
          https://api.github.com/repos/felipey55/ModuloEquipajeB/releases
